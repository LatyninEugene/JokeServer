plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'ru.latynin'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

ext {
	versions = [
			mapstruct: '1.5.5.Final',
			deepl: '1.4.0',
			jwt: '0.9.1'
	]
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
//	implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'  TODO
//	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
//	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.kafka:spring-kafka'

	implementation "io.jsonwebtoken:jjwt:${versions.jwt}"
	implementation 'javax.xml.bind:jaxb-api:latest.release'

	implementation "com.deepl.api:deepl-java:${versions.deepl}"
	implementation "org.mapstruct:mapstruct:${versions.mapstruct}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${versions.mapstruct}"
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'


	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.testcontainers:elasticsearch'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:kafka'
	testImplementation 'org.testcontainers:mongodb'
}

tasks.named('test') {
	useJUnitPlatform()
}
